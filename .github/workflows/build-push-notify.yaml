name: Build, Push and Notify

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "main" ]
    types:
      - closed

jobs:

  build-and-push-dev:
  #Hanya akan jalan jika ada event di branch dev
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build --file Dockerfile --tag josaphatyoga/webapp:${{ github.sha }}-dev . 

    - name: Login Docker Hub
      run: docker login --username josaphatyoga --password ${{ secrets.DOCKER_TOKEN }}

    - name: Push Image to Docker Image Registry 
      run: docker push josaphatyoga/webapp:${{ github.sha }}-dev
      
    - uses: actions/checkout@v4
      with:
        # Repository name with owner. For example, actions/checkout
        # Default: ${{ github.repository }}
        repository: 'josambrosia/Webbapp-Manifest'
        token: ${{ secrets.MANIFEST_REPO_TOKEN }}

        
    - name: aku ingin melihat ada dimans?
      run: pwd && ls
    
    - name: Change Image Tags in Manifest [Dev]
      run: sed -i 's/\(image:.*:\).*/\1${{ github.sha }}-dev/' manifest/dev/deployment.yaml 

    - name: Commit & push to Manifest Repo
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "banuthecreator@gmail.com"
        git add -A
        git commit -m"commit from github action ${{ github.sha }}-dev
        git push


  notify-dev: 
    runs-on: ubuntu-latest
    needs: build-and-push-dev

    steps:
      - name: Send Discord notification
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_URL }}
        run: |
          curl -H "Content-Type: application/json" -d '{"content": "[DEV] Image telah berhasil dibuild dan dipush ke Docker Image Registry, Ndoro"}' $DISCORD_WEBHOOK_URL

  build-and-push-prod:
    runs-on: ubuntu-latest
    #Di bawah ini merupakan conditioning apabila dev dimerge ke prod/main
    if: |
      github.ref == 'refs/heads/main' && github.event.pull_request.merged == true 
    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build --file Dockerfile --tag josaphatyoga/webapp:${{ github.sha }} . 

    - name: Login Docker Hub
      run: docker login --username josaphatyoga --password ${{ secrets.DOCKER_TOKEN }}

    - name: Push Image to Docker Image Registry 
      run: docker push josaphatyoga/webapp:${{ github.sha }}
      
  notify-prod: 
    runs-on: ubuntu-latest
    needs: build-and-push-prod
    #if:  github.ref == 'refs/heads/main'
    steps:
      - name: Send Discord notification
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_URL }}
        run: |
          curl -H "Content-Type: application/json" -d '{"content": "[PROD] Image telah berhasil dibuild dan dipush ke Docker Image Registry, Ndoro"}' $DISCORD_WEBHOOK_URL

